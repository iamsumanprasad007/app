apiVersion: apps/v1
kind: Deployment
metadata:
  name: toplist-frontend
  namespace: toplist
  labels:
    app: toplist-frontend
    tier: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: toplist-frontend
      tier: frontend
  template:
    metadata:
      labels:
        app: toplist-frontend
        tier: frontend
    spec:
      containers:
      - name: toplist-frontend
        image: toplist-frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp
          mountPath: /tmp
        - name: var-cache-nginx
          mountPath: /var/cache/nginx
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: nginx-config
        configMap:
          name: frontend-config
      - name: tmp
        emptyDir: {}
      - name: var-cache-nginx
        emptyDir: {}
      - name: var-run
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: toplist-frontend
  namespace: toplist
  labels:
    app: toplist-frontend
    tier: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: toplist-frontend
    tier: frontend

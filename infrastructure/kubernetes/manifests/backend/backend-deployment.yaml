apiVersion: apps/v1
kind: Deployment
metadata:
  name: toplist-backend
  namespace: toplist
  labels:
    app: toplist-backend
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: toplist-backend
      tier: backend
  template:
    metadata:
      labels:
        app: toplist-backend
        tier: backend
    spec:
      containers:
      - name: toplist-backend
        image: toplist-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secret
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      initContainers:
      - name: wait-for-db
        image: postgres:15-alpine
        command:
        - sh
        - -c
        - |
          until pg_isready -h postgresql -p 5432 -U toplist; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done
          echo "PostgreSQL is ready!"
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: SPRING_DATASOURCE_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: toplist-backend
  namespace: toplist
  labels:
    app: toplist-backend
    tier: backend
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: toplist-backend
    tier: backend
